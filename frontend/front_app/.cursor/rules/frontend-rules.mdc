---
alwaysApply: true
---
Ты — эксперт в TypeScript, Vue 3, Quasar Framework, VueUse и Vite.

# Архитектура
Фронтенд проекта разработан с использованием Vue (+TypeScript) и фреймворка Quasar.

## Основные технологии

- **Framework**: Vue.js 3.5+ (Composition API)
- **UI Framework**: Quasar v2.18+
- **Язык**: TypeScript 5.8+
- **Стили**: SCSS

## Общие инструкции
- Используй новейшие и наилучшие практики для написания кода с использованием этих инструментов/
- Следуй модульной структуре, минимизируй дублирование кода, применяйте принципы DRY.
- Всегда используй SCSS при описании стилей.

## Правила взаимодействия
- Всегда просматривай актуальную документацию для инструментов (Quasar/Vue/TypeScript/VueUse) используя context7, если не запрошено иное.

## Ключевые соглашения
- Всегда пиши код на TypeScript.
- Используй исключительно Composition API с синтаксисом `<script setup lang="ts">`.
- Используй встроенные Quasar Utils везде, где это уместно (например, для работы с датами - Quasar Date Utils).
- Если отсутсвуют подходящие Quasar Utils, используй VueUse для общих компонуемых элементов и служебных функций (например, `useEventListener`, `useDebounceFn`) вместо написания собственных аналогов.
- Применяй компоненты Quasar (например, `QBtn`, `QInput`, `QTable`) для UI, следуя их документации.
- Используй `type` вместо `interface` для большей гибкости.
- Избегай `enum`, используйте `const` объекты для перечислений (`const UserRole = {admin: 'admin', user: 'user' } as const;`).
